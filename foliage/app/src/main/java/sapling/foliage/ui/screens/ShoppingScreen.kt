package sapling.foliage.ui.screens

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Add
import androidx.compose.material.icons.filled.ShoppingCart
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.FloatingActionButton
import androidx.compose.material3.Icon
import androidx.compose.material3.ListItem
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.material3.TopAppBar
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextOverflow
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle.FULL

data class ShoppingTour(
    val date: LocalDate,
    val market: String,
    val title: String?,
    val price: Float,
    val autoGenerated: Boolean,
    val commited: Boolean,
    val entries: List<ShoppingTourEntry>
)

data class ShoppingTourEntry(
    val product: String,
    val amount: Int,
)

val tempIngredientList = listOf<ShoppingTourEntry>(
    ShoppingTourEntry("Mate", 20),
    ShoppingTourEntry("Milch", 1),
    ShoppingTourEntry("Erdnussbutter", 8),
    ShoppingTourEntry("Nudeln", 5),
    ShoppingTourEntry("Tortelini", 17),
    ShoppingTourEntry("Eier", 23)
)

val tempTours = listOf<ShoppingTour>(
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = true,
        price = 1.00f,
        title = "Test Titel",
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = true,
        price = 1.00f,
        title = "Test Titel",
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = false,
        price = 1.00f,
        title = "Test Titel",
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = false,
        price = 1.00f,
        title = "Test Titel",
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = true,
        price = 1.00f,
        title = "Test Titel",
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = true,
        price = 1.00f,
        title = "Test Titel",
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = false,
        price = 1.00f,
        title = "Test Titel",
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = false,
        price = 1.00f,
        title = "Test Titel",
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = true,
        price = 1.00f,
        title = null,
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = true,
        price = 1.00f,
        title = null,
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = false,
        price = 1.00f,
        title = null,
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = false,
        commited = false,
        price = 1.00f,
        title = null,
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = true,
        price = 1.00f,
        title = null,
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = true,
        price = 1.00f,
        title = null,
        entries = listOf(),
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = false,
        price = 1.00f,
        title = null,
        entries = tempIngredientList,
    ),
    ShoppingTour(
        date = LocalDate.parse("2000-12-13"),
        market = "Rewe",
        autoGenerated = true,
        commited = false,
        price = 1.00f,
        title = null,
        entries = listOf(),
    ),
)

@Composable
fun ShoppingTourEntry(modifier: Modifier = Modifier, shoppingTour: ShoppingTour) {
    ListItem(
        leadingContent = {
            Icon(
                imageVector = Icons.Filled.ShoppingCart,
                contentDescription = "Leading Icon",
                tint = MaterialTheme.colorScheme.onSecondary,
                modifier = Modifier
                    .background(MaterialTheme.colorScheme.secondary, shape = CircleShape)
                    .padding(8.dp)
            )
        },
        overlineContent = { if (shoppingTour.autoGenerated) Text("AUTO-IMPORT") else null },
        headlineContent = {
            Text(
                text = shoppingTour.title ?: DateTimeFormatter
                    .ofLocalizedDate(FULL)
                    .format(shoppingTour.date)
            )
        },
        supportingContent = {
            val itemString =
                shoppingTour.entries.joinToString(", ") { e -> "${e.amount}x ${e.product}" }
            Text(
                text = if (itemString.isNotEmpty()) itemString else "Nothing was bought",
                maxLines = 2,
                overflow = TextOverflow.Ellipsis

            )
        },
        trailingContent = {
            Text(
                text = "%.2fâ‚¬".format(shoppingTour.price),
                modifier = Modifier.fillMaxHeight(),
                fontSize = 20.sp
            )
        }
    )
}

@OptIn(ExperimentalMaterial3Api::class)
@Preview
@Composable
fun ShoppingScreen(modifier: Modifier = Modifier) {
    Scaffold(
        topBar = {
            TopAppBar(title = {
                Text("Shopping Tours")
            })
        },
        floatingActionButton = {
            FloatingActionButton(onClick = {}) {
                Icon(Icons.Filled.Add, "Add new Shopping Tour")
            }
        },
    ) { innerPadding ->
        LazyColumn(
            contentPadding = innerPadding,
            modifier = Modifier.fillMaxHeight(),
        ) {
            items(tempTours) { tour ->
                ShoppingTourEntry(shoppingTour = tour)
            }
        }
    }
}